// 进行布尔运算测试的两个 path，多组。

import { IDrawParams } from './type';
import { ellipseToPath, rectToPath, strToPath } from './utils';

/**
 * 图形都使用 path 拟合
 */
export const testData: IDrawParams['paths'] = [
  // 矩形和矩形
  {
    path1: [['M', 0, 0], ['L', 100, 0], ['L', 100, 100], ['L', 0, 100], ['Z']],
    path2: [
      ['M', 50, 50],
      ['L', 150, 50],
      ['L', 150, 150],
      ['L', 50, 150],
      ['Z'],
    ],
  },
  // 圆形和圆形
  {
    path1: ellipseToPath(60, 60, 60, 60),
    path2: ellipseToPath(100, 60, 40, 40),
  },
  // 长方形和圆形
  {
    path1: rectToPath(20, 0, 50, 100),
    path2: ellipseToPath(100, 50, 50, 50),
  },
  {
    path1: strToPath(
      'M43.7446 40.2407C17.6902 26.3999 7.91982 59.7807 10.3624 85.834C6.29141 137.126 98.296 150.967 124.35 146.082C150.405 141.197 139.006 55.7098 111.323 51.639C83.6404 47.5682 93.4108 130.613 72.2416 124.1C51.0724 117.586 69.799 54.0815 43.7446 40.2407Z',
    ),
    path2: strToPath(
      'M38 60.4821V14L155 46.619L113.562 151H83.5L120.875 76.7917L38 60.4821Z',
    ),
  },
  {
    path1: strToPath(
      'M69.248 108.62C74.2241 108.62 78.6977 105.753 82.3887 101.244C81.5439 108.386 79.8501 113.341 77.576 116.551C75.1407 119.988 72.0281 121.444 68.48 121.444C63.6725 121.444 59.4549 117.596 57.4394 110.794L57.2944 110.304L56.808 110.46L44.776 114.3L44.3121 114.448L44.4478 114.915C47.9514 126.983 56.3056 134.22 67.328 134.22C75.9214 134.22 82.2177 131.051 86.7348 125.078C91.2277 119.136 93.9311 110.459 95.4712 99.4855L105.583 28.8308L105.665 28.26H105.088H92.672H92.2348L92.1765 28.6933L91.4823 33.8504C88.7942 29.4363 84.6735 27.108 79.36 27.108C72.899 27.108 67.0943 30.282 62.474 36.7081C57.8645 43.1193 54.4227 52.7763 52.6247 65.8117C50.38 81.9736 51.5495 92.653 54.7822 99.3143C56.4031 102.654 58.5453 104.989 61.0344 106.485C63.5217 107.979 66.3264 108.62 69.248 108.62ZM72.576 96.1C70.4383 96.1 68.8869 95.3554 67.7579 94.0193C66.6101 92.6609 65.8633 90.6482 65.4539 88.0579C64.6346 82.8741 65.1993 75.6127 66.2877 67.3533C67.309 59.6944 68.9643 52.7134 71.3482 47.6614C73.7456 42.5807 76.7882 39.628 80.512 39.628C83.2054 39.628 85.2937 40.903 86.7148 43.1254C88.1448 45.3617 88.9029 48.571 88.8446 52.4004L84.757 80.8856C83.7424 84.8071 82.166 88.6353 80.0923 91.473C78.011 94.3212 75.4862 96.1 72.576 96.1Z',
    ),
    path2: strToPath(
      'M145.5 108C145.5 128.711 128.711 145.5 108 145.5C87.2893 145.5 70.5 128.711 70.5 108C70.5 87.2893 87.2893 70.5 108 70.5C128.711 70.5 145.5 87.2893 145.5 108ZM106.5 26C106.5 30.6944 102.694 34.5 98 34.5C93.3056 34.5 89.5 30.6944 89.5 26C89.5 21.3056 93.3056 17.5 98 17.5C102.694 17.5 106.5 21.3056 106.5 26Z',
    ),
  },
  // star + star
  {
    path1: strToPath(
      'M61.0503 35.741L59.1075 61.9176L82.6103 49.5256L65.3087 69.3972L91.9312 72.9875L65.8795 78.9637L85.4529 97.165L60.6019 86.9631L65.6497 112.823L51.4917 90.34L40.0859 113.981L42.0287 87.8044L18.5259 100.196L35.8275 80.3248L9.20494 76.7344L35.2566 70.7583L15.6833 52.557L40.5343 62.7589L35.4864 36.8989L49.6445 59.382L61.0503 35.741Z',
    ),
    path2: strToPath(
      'M116.981 22.0468L113.832 62.0729L149.117 42.9163L123.043 73.4474L162.849 78.6894L123.809 88.0635L152.932 115.702L115.838 100.338L123.153 139.816L102.174 105.584L84.8874 141.822L88.0361 101.795L52.7511 120.952L78.8252 90.421L39.0191 85.179L78.0592 75.8049L48.9366 48.1666L86.0307 63.5299L78.7154 24.0522L99.6948 58.2847L116.981 22.0468Z',
    ),
  },
  {
    path1: strToPath('M53 27H156V141H53V27Z'),
    path2: strToPath('M6 141H53V86.5L76.5 68V27H6V141Z'),
  },
  {
    path1: strToPath(
      'M57.8816 31.4532C86.8545 35.0604 51.242 145.08 27.0979 113.216C2.9539 81.3528 58.4852 87.3648 94.0977 90.3708C129.71 93.3768 128.503 36.2628 91.0797 53.6976C53.6564 71.1324 -4.28931 81.3528 13.2151 57.906C30.7196 34.4592 40.3772 29.2738 57.8816 31.4532Z',
    ),
    path2: rectToPath(50.5, 47.5, 89, 66),
  },
];
